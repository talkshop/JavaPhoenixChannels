plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'groovy'
if (project.hasProperty('signing.keyId')) {
    apply plugin: 'signing'
}

group = 'com.dyoed'
version = '0.3.4'

allprojects {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.3'
    compile 'com.squareup.okhttp3:okhttp:3.9.1'
    compile 'org.slf4j:slf4j-log4j12:1.7.22'
    testCompile 'org.codehaus.groovy:groovy-all:2.3.10'
    testCompile "org.spockframework:spock-core:1.0-groovy-2.3"

    // optional dependencies for using Spock
    testRuntime "org.hamcrest:hamcrest-core:1.3" // only necessary if Hamcrest matchers are used
    testRuntime "cglib:cglib-nodep:3.1"
    // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:2.5"
    // allows mocking of classes without default constructor (together with CGLIB)
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

repositories {
    mavenCentral()
}

artifacts {
    archives javadocJar, sourcesJar
}

if (project.hasProperty('signing.keyId')) {
    signing {
        sign configurations.archives
    }
}

publishing {
    publications {
        JavaPhoenixChannelsJar(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId 'com.dyoed.phoenix'
            artifactId 'java-phoenix-channels'
            version '0.3.4'
        }
    }
}

bintray {

    File localPropsFile = file(project.rootProject.file('local.properties'))
    if (localPropsFile.exists()) {
        Properties p = new Properties()
        p.load(new FileInputStream(localPropsFile))
        p.each { name, value ->
            ext[name] = value
        }
    } else {
        throw new IllegalStateException("local.properties could not be located for build process")
    }

    user = buser
    key = bapikey
    pkg {
        repo = 'maven'
        name = 'java-phoenix-channels'
        licenses = ['BSD-3']
        vcsUrl = 'https://github.com/jecsan/JavaPhoenixChannels.git'
    }
    publications = ['JavaPhoenixChannelsJar']
}
